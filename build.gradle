/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'com.github.hierynomus.license' version '0.15.0'
    id 'org.nosphere.apache.rat' version '0.6.0'
    id 'com.jfrog.artifactory' version '4.15.1'
    id 'maven-publish'
    id 'java-library'
    id 'idea'
}

allprojects {
    apply plugin: 'com.github.hierynomus.license'
    apply plugin: 'org.nosphere.apache.rat'

    repositories {
        jcenter()
        mavenLocal()
        maven { url 'https://mifos.jfrog.io/mifos/libs-snapshot/' }
        mavenCentral()
    }

    license {
        header rootProject.file('./HEADER')
        strictCheck true
        mapping {
            java = 'SLASHSTAR_STYLE'
            xml = 'XML_STYLE'
            yml = 'SCRIPT_STYLE'
            yaml = 'SCRIPT_STYLE'
        }
    }

    rat {
        // List of exclude directives, defaults to ['**/.gradle/**']
        excludes = [
                "**/.idea/**",
                "**/.gradle/**",
                "**/gradle/**",
                "**/build/**",
                "gradlew",
                "gradlew.bat",
                "README.md",
                ".classpath",
                ".project",
                ".settings/**",
                "**/bin/**"
        ]
    }
}

subprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'com.jfrog.artifactory'
    apply plugin: 'maven-publish'
    apply plugin: 'java-library'
    apply plugin: 'idea'

    group = 'org.apache.fineract.cn.template'
    version = 'spring_boot_2-SNAPSHOT'
    sourceCompatibility = '1.8'

    ext {
        set('springBootVersion', '2.2.6.RELEASE')
        set('springCloudVersion', "Hoxton.SR3")

        set('frameworkapiVersion', 'spring_boot_2-SNAPSHOT')
        set('frameworklangVersion', 'spring_boot_2-SNAPSHOT')
        set('frameworkasyncVersion', 'spring_boot_2-SNAPSHOT')
        set('frameworkcassandraVersion', 'spring_boot_2-SNAPSHOT')
        set('frameworkpostgresqlVersion', 'spring_boot_2-SNAPSHOT')
        set('frameworkcommandVersion', 'spring_boot_2-SNAPSHOT')
        set('frameworktestVersion', 'spring_boot_2-SNAPSHOT')
        set('frameworkanubisVersion', 'spring_boot_2-SNAPSHOT')

        set('cassandra.version', '3.6')
        set('cassandra-driver.version', '3.1.2')
        set('activemq.version', '5.13.2')
        set('spring-data-releasetrain.version', 'Gosling-SR2A')
        set('validatorVersion', '6.1.4.Final')
    }

    dependencies {
        implementation 'com.google.code.findbugs:jsr305'
        implementation "org.apache.fineract.cn:postgresql:$frameworkpostgresqlVersion"

        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }

    dependencyManagement {
        imports {
            mavenBom 'io.spring.platform:platform-bom:Cairo-SR8'
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    tasks.withType(JavaCompile) {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    jar {
        from sourceSets.main.java
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }

    artifactory {
        contextUrl = System.getenv("ARTIFACTORY_URL")
        publish {
            repository {
                repoKey = project.findProperty('artifactoryRepoKey')
                username = System.getenv("ARTIFACTORY_USER")
                password = System.getenv("ARTIFACTORY_PASSWORD")
            }

            defaults {
                publications ('api', 'componentTest', 'service', 'bootService')
            }
        }
    }
    artifactoryPublish.dependsOn('publishToMavenLocal')
}
